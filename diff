diff --git a/usr/Makefile b/usr/Makefile
index decf13c..886a916 100644
--- a/usr/Makefile
+++ b/usr/Makefile
@@ -25,7 +25,7 @@ ifneq ($(SD_NOTIFY),)
 CFLAGS += -DUSE_SYSTEMD
 endif
 
-ifneq ($(shell test -e /usr/include/sys/eventfd.h && test -e /usr/include/libaio.h && echo 1),)
+ifneq ($(shell test -e /usr/include/libaio.h && echo 1),)
 CFLAGS += -DUSE_EVENTFD
 TGTD_OBJS += bs_aio.o
 LIBS += -laio
@@ -49,17 +49,18 @@ CFLAGS += -Wall -Wstrict-prototypes -Werror -fPIC
 CFLAGS += -DTGT_VERSION=\"$(VERSION)$(EXTRAVERSION)\"
 CFLAGS += -DBSDIR=\"$(DESTDIR)$(libdir)/backing-store\"
 
-LIBS += -lpthread -ldl
+LIBS += -lpthread -ldl -lrt
 
 ifneq ($(SD_NOTIFY),)
 LIBS += -lsystemd
 endif
 
-PROGRAMS += tgtd tgtadm tgtimg
+PROGRAMS += targetd targetadm tgtimg
 TGTD_OBJS += tgtd.o mgmt.o target.o scsi.o log.o driver.o util.o work.o \
 		concat_buf.o parser.o spc.o sbc.o mmc.o osd.o scc.o smc.o \
 		ssc.o libssc.o bs_rdwr.o bs_ssc.o \
-		bs_null.o bs_sg.o bs.o libcrc32c.o bs_sheepdog.o
+		bs_vio.o vio.o ring.o bs_viou.o viou.o\
+		bs_null.o bs_sg.o bs.o libcrc32c.o
 
 TGTD_DEP = $(TGTD_OBJS:.o=.d)
 
@@ -68,17 +69,19 @@ LDFLAGS = -Wl,-E,-rpath=$(libdir)
 .PHONY:all
 all: $(PROGRAMS) $(MODULES)
 
-tgtd: $(TGTD_OBJS)
+targetd: $(TGTD_OBJS)
 	echo $(CC) $^ -o $@ $(LIBS)
-	$(CC) $^ -o $@ $(LDFLAGS) $(LIBS)
+	$(CC) $^ -g -o $@ $(LDFLAGS) $(LIBS)
+	cp $@ ../../bin
 
 -include $(TGTD_DEP)
 
 TGTADM_OBJS = tgtadm.o concat_buf.o
 TGTADM_DEP = $(TGTADM_OBJS:.o=.d)
 
-tgtadm: $(TGTADM_OBJS)
+targetadm: $(TGTADM_OBJS)
 	$(CC) $^ -o $@
+	cp $@ ../../bin
 
 -include $(TGTADM_DEP)
 
@@ -115,3 +118,6 @@ endif
 .PHONY: clean
 clean:
 	rm -f *.[od] *.so $(PROGRAMS) iscsi/*.[od] ibmvio/*.[od] fc/*.[od]
+
+test:
+	cp targetd /usr/local/bin && cp targetadm /usr/local/bin
diff --git a/usr/bs.c b/usr/bs.c
index 8171a32..f9c4dd4 100644
--- a/usr/bs.c
+++ b/usr/bs.c
@@ -406,7 +406,7 @@ tgtadm_err bs_thread_open(struct bs_thread_info *info, request_func_t *rfn,
 	if (!info->worker_thread)
 		return TGTADM_NOMEM;
 
-	eprintf("%d\n", nr_threads);
+	//eprintf("%d\n", nr_threads);
 	info->request_fn = rfn;
 
 	INIT_LIST_HEAD(&info->pending_list);
diff --git a/usr/iscsi/iscsi_tcp.c b/usr/iscsi/iscsi_tcp.c
index 536f22e..61b9b3d 100644
--- a/usr/iscsi/iscsi_tcp.c
+++ b/usr/iscsi/iscsi_tcp.c
@@ -430,8 +430,10 @@ static int iscsi_tcp_init(void)
 	/* if the user did not set a portal we default to wildcard
 	   for ipv4 and ipv6
 	*/
+	extern short int data_port;
 	if (list_empty(&iscsi_portals_list)) {
-		iscsi_add_portal(NULL, 3260, 1);
+		//iscsi_add_portal(NULL, 3260, 1);
+		iscsi_add_portal(NULL, data_port, 1);
 	}
 
 	INIT_LIST_HEAD(&iscsi_tcp_conn_list);
diff --git a/usr/iscsi/iscsid.c b/usr/iscsi/iscsid.c
index 2918615..f2c3899 100644
--- a/usr/iscsi/iscsid.c
+++ b/usr/iscsi/iscsid.c
@@ -2563,7 +2563,7 @@ static struct tgt_driver iscsi = {
 	.transportid		= iscsi_transportid,
 	.default_bst		= "rdwr",
 };
-
+//constructor will execute before main function
 __attribute__((constructor)) static void iscsi_driver_constructor(void)
 {
 	register_driver(&iscsi);
diff --git a/usr/log.c b/usr/log.c
index 2f0c4d4..3e883ce 100644
--- a/usr/log.c
+++ b/usr/log.c
@@ -30,6 +30,7 @@
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <sys/prctl.h>
+#include <time.h>
 
 #include "log.h"
 
@@ -45,6 +46,7 @@ static struct logarea *la;
 static char *log_name;
 int is_debug = 0;
 static pid_t pid;
+static FILE *logfile;
 
 static int logarea_init (int size)
 {
@@ -52,7 +54,7 @@ static int logarea_init (int size)
 	extern char mgmt_path[];
 	key_t semkey;
 
-	logdbg(stderr,"enter logarea_init\n");
+	syslog(LOG_INFO,"enter logarea_init\n");
 
 	if ((shmid = shmget(IPC_PRIVATE, sizeof(struct logarea),
 			    0644 | IPC_CREAT | IPC_EXCL)) == -1) {
@@ -115,8 +117,8 @@ static int logarea_init (int size)
 		return 1;
 	}
 
-        if ((semget(semkey, 0, IPC_EXCL)) > 0) {
-		/* Semkey may exists after SIGKILL tgtd */
+    if ((semget(semkey, 0, IPC_EXCL)) > 0) {
+		// Semkey may exists after SIGKILL targetd
 		syslog(LOG_WARNING, "semkey 0x%x already exists", semkey);
 	}
 	if ((la->semid = semget(semkey, 1, 0666 | IPC_CREAT)) < 0) {
@@ -215,8 +217,8 @@ static int log_enqueue(int prio, const char *fmt, va_list ap)
 	lastmsg->next = la->tail;
 	msg->next = la->head;
 
-	logdbg(stderr, "enqueue: %p, %p, %i, %s\n", (void *)msg, msg->next,
-		msg->prio, (char *)&msg->str);
+	//syslog(LOG_INFO, "enqueue: %p, %p, %i, %s\n", (void *)msg, msg->next,
+	//	msg->prio, (char *)&msg->str);
 
 #if LOGDBG
 	dump_logarea();
@@ -253,14 +255,26 @@ static int log_dequeue(void *buff)
 	return la->empty;
 }
 
+static void getDateTime(char *nowtime)
+{
+    time_t rawtime;
+    struct tm* ltime;
+    time(&rawtime);
+    ltime = localtime(&rawtime);
+    strftime(nowtime, 20, "%Y-%m-%d %H:%M:%S", ltime);
+}
+
 /*
  * this one can block under memory pressure
  */
 static void log_syslog (void * buff)
 {
 	struct logmsg * msg = (struct logmsg *)buff;
-
-	syslog(msg->prio, "%s", (char *)&msg->str);
+	char nowtime[20];
+    getDateTime(nowtime);
+	//syslog(msg->prio, "%s", (char *)&msg->str);
+	fprintf(logfile, "%s %d %s", nowtime, msg->prio, (char *)&msg->str);
+	fflush(logfile);
 }
 
 static void dolog(int prio, const char *fmt, va_list ap)
@@ -347,7 +361,7 @@ static void log_flush(void)
 
 static void log_sigsegv(void)
 {
-	log_error("tgtd logger exits abnormally, pid:%d\n", getpid());
+	log_error("targetd logger exits abnormally, pid:%d err:%s\n", getpid(), strerror(errno));
 	log_flush();
 	closelog();
 	free_logarea();
@@ -357,8 +371,6 @@ static void log_sigsegv(void)
 int log_init(char *program_name, int size, int daemon, int debug)
 {
 	is_debug = debug;
-
-	logdbg(stderr,"enter log_init\n");
 	log_name = program_name;
 
 	if (daemon) {
@@ -366,7 +378,13 @@ int log_init(char *program_name, int size, int daemon, int debug)
 		struct sigaction sa_new;
 
 		openlog(log_name, 0, LOG_DAEMON);
-		setlogmask (LOG_UPTO (LOG_DEBUG));
+		setlogmask(LOG_UPTO (LOG_DEBUG));
+
+		logfile = fopen("/var/log/comet/target.log", "a+");
+	    if (logfile == NULL) {
+            syslog(LOG_ERR, "failed to create log file\n");
+            return 1;
+	    }
 
 		if (logarea_init(size)) {
 			syslog(LOG_ERR, "failed to initialize the logger\n");
@@ -380,13 +398,13 @@ int log_init(char *program_name, int size, int daemon, int debug)
 			return 1;
 		} else if (pid) {
 			syslog(LOG_WARNING,
-			       "tgtd daemon started, pid:%d\n", getpid());
+			       "targetd daemon started, pid:%d\n", getpid());
 			syslog(LOG_WARNING,
-			       "tgtd logger started, pid:%d debug:%d\n", pid, is_debug);
+			       "targetd logger started, pid:%d debug:%d\n", pid, is_debug);
 			return 0;
 		}
 
-		/* flush on daemon's crash */
+		// flush on daemon's crash
 		sa_new.sa_handler = (void*)log_sigsegv;
 		sigemptyset(&sa_new.sa_mask);
 		sa_new.sa_flags = 0;
@@ -411,9 +429,13 @@ void log_close(void)
 		la->active = 0;
 		waitpid(pid, NULL, 0);
 
-		log_warning("tgtd logger stopped, pid:%d\n", pid);
+		log_warning("targetd logger stopped, pid:%d\n", pid);
 		log_flush();
 		closelog();
 		free_logarea();
 	}
+
+	if (logfile != NULL) {
+        fclose(logfile);
+	}
 }
diff --git a/usr/sbc.c b/usr/sbc.c
index 779dacd..4c7cb2b 100644
--- a/usr/sbc.c
+++ b/usr/sbc.c
@@ -735,7 +735,7 @@ static tgtadm_err sbc_lu_init(struct scsi_lu *lu)
 	if (spc_lu_init(lu))
 		return TGTADM_NOMEM;
 
-	strncpy(lu->attrs.product_id, "VIRTUAL-DISK", sizeof(lu->attrs.product_id));
+	strncpy(lu->attrs.product_id, "COMET-DISK", sizeof(lu->attrs.product_id));
 	lu->attrs.version_desc[0] = 0x04C0; /* SBC-3 no version claimed */
 	lu->attrs.version_desc[1] = 0x0960; /* iSCSI */
 	lu->attrs.version_desc[2] = 0x0300; /* SPC-3 */
diff --git a/usr/scsi_cmnd.h b/usr/scsi_cmnd.h
index 8bdcb19..21090df 100644
--- a/usr/scsi_cmnd.h
+++ b/usr/scsi_cmnd.h
@@ -141,5 +141,5 @@ static inline int cmd_##name(const struct scsi_cmd *c)			\
 
 CMD_FNS(QUEUED, queued)
 CMD_FNS(PROCESSED, processed)
-CMD_FNS(ASYNC, async)
+CMD_FNS(ASYNC, async)      //set_cmd_async clear_cmd_async cmd_async
 CMD_FNS(NOT_LAST, not_last)
diff --git a/usr/tgtadm.c b/usr/tgtadm.c
index b8df58d..4bd2a02 100644
--- a/usr/tgtadm.c
+++ b/usr/tgtadm.c
@@ -46,7 +46,7 @@
 
 #define BUFSIZE 4096
 
-static const char program_name[] = "tgtadm";
+static const char program_name[] = "targetadm";
 static int debug;
 
 static const char *tgtadm_strerror(int err)
diff --git a/usr/tgtadm.h b/usr/tgtadm.h
index e3fda6a..12e6859 100644
--- a/usr/tgtadm.h
+++ b/usr/tgtadm.h
@@ -1,7 +1,8 @@
 #ifndef TGTADM_H
 #define TGTADM_H
 
-#define TGT_IPC_DIR		"/var/run/tgtd"
+//#define TGT_IPC_DIR		"/var/run/tgtd"
+#define TGT_IPC_DIR		    "/var/lib/comet/controller/target"
 #define TGT_IPC_NAMESPACE	TGT_IPC_DIR"/socket"
 #define TGT_LLD_NAME_LEN	64
 
diff --git a/usr/tgtd.c b/usr/tgtd.c
index 19c703d..2c8bbe8 100644
--- a/usr/tgtd.c
+++ b/usr/tgtd.c
@@ -47,13 +47,14 @@ unsigned long pagesize, pageshift;
 
 int system_active = 1;
 static int ep_fd;
-static char program_name[] = "tgtd";
+static char program_name[] = "targetd";
 static LIST_HEAD(tgt_events_list);
 static LIST_HEAD(tgt_sched_events_list);
 
 static struct option const long_options[] = {
 	{"foreground", no_argument, 0, 'f'},
 	{"control-port", required_argument, 0, 'C'},
+	{"data-port", required_argument, 0, 'D'},
 	{"nr_iothreads", required_argument, 0, 't'},
 	{"debug", required_argument, 0, 'd'},
 	{"version", no_argument, 0, 'V'},
@@ -76,6 +77,7 @@ static void usage(int status)
 		"Usage: %s [OPTION]\n"
 		"-f, --foreground        make the program run in the foreground\n"
 		"-C, --control-port NNNN use port NNNN for the mgmt channel\n"
+		"-D, --data-port    NNNN use port NNNN for the data channel\n"
 		"-t, --nr_iothreads NNNN specify the number of I/O threads\n"
 		"-d, --debug debuglevel  print debugging information\n"
 		"-V, --version           print version and exit\n"
@@ -104,6 +106,9 @@ static void version(void)
 /* Default TGT mgmt port */
 short int control_port;
 
+/* Default TGT data port */
+short int data_port;
+
 static void signal_catch(int signo)
 {
 }
@@ -550,6 +555,11 @@ int main(int argc, char **argv)
 			if (ret)
 				bad_optarg(ret, ch, optarg);
 			break;
+		case 'D':
+		    ret = str_to_int_ge(optarg, data_port, 0);
+		    if (ret)
+				bad_optarg(ret, ch, optarg);
+			break;
 		case 't':
 			ret = str_to_int_gt(optarg, nr_iothreads, 0);
 			if (ret)
diff --git a/usr/tgtd.h b/usr/tgtd.h
index d8b2ac1..d10de88 100644
--- a/usr/tgtd.h
+++ b/usr/tgtd.h
@@ -28,7 +28,7 @@ struct concat_buf;
 #define BLOCK_DESCRIPTOR_LEN	8
 #define VERSION_DESCRIPTOR_LEN	8
 
-#define VENDOR_ID	"IET"
+#define VENDOR_ID	"COMET"
 
 #define _TAB1 "    "
 #define _TAB2 _TAB1 _TAB1
